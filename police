#!/usr/bin/swift sh

// See example from
// https://github.com/tuist/XcodeProj/blob/da98243ad87eddbb2324d9cc28a60fd57875bb55/README.md
import Foundation
import XcodeProj  // @tuist ~> 8.8.0
import PathKit

/// Slims `XCBuildConfiguration` to our domain
struct BuildConfiguration {
    let name: String
    let hasBuildSettings: Bool
}

extension BuildConfiguration {

    init(with xcBuildConfiguration: XCBuildConfiguration) {
        self.init(
            name: xcBuildConfiguration.name,
            hasBuildSettings: xcBuildConfiguration.buildSettings.isEmpty == false
        )
    }
}

guard CommandLine.arguments.count == 2 else {
    let arg0 = Path(CommandLine.arguments[0]).lastComponent
    fputs("usage: \(arg0) <project>\n", stderr)
    exit(1)
}

let projectPath = Path(CommandLine.arguments[1])
let xcodeproj = try XcodeProj(path: projectPath)

let buildConfigurations = xcodeproj
    .pbxproj
    .buildConfigurations
    .map(BuildConfiguration.init(with:))
    .filter { $0.hasBuildSettings }

guard buildConfigurations.isEmpty else {
  buildConfigurations.forEach { buildConfiguration in
      // TODO: Restore the could
      fputs("Build configuration '\(buildConfiguration.name)' has build settings tracked in the Xcode project.\n", stderr)
  }
  exit(1)
}
